#labels Featured
= Introduction =

ExtPascal is an ExtJS wrapper/binding. ExtPascal lets you use the ExtJS from Object Pascal commands issued by the server. That brings the structure and strict syntax of the Object Pascal for programming the web browser. 

The main advantages are:

 * Use your preferred language (in this case Object Pascal) and where you are more productive instead of using JavaScript.
 * Use of native and compiled code with a strongly typed language. That is, many errors are directly appointed by the compiler, without waste time testing in the browser.
 * Use of the editor's intellisense, available in moderns IDEs (Delphi/Lazarus) more productivity in the coding.
 * Centering the programming on the server, where JavaScript is generated dynamically, makes development easier and less dispersed.
 * The business rules can be encapsulated in the server, in Object Pascal, instead of being visible in JavaScript.

= Prerequisites =

 * One Windows, Linux, MacOS X or FreeBSD machine. I tested using Intel/AMD 32 bits, but should work with other processors supported by FreePascal.
 * A web browser: IE 5+, Firefox 1.5+, Safari 2+, Opera 9+ or compatibles.   
 * Download and install Apache 2.2.8 or later, but Apache 1.3 and IIS works using CGIGateway included in ExtPascal package, see below.
 * For native FastCGI operation download and install [http://www.fastcgi.com FastCGI for   Apache 2.2]. For FastCGI thru CGIGateway none extra configuration on Apache or IIS is necessary.
 * Download ExtJS 2.1 or later, _*with the documentation*_.
 * Install ExtJS below Apache's Document Root at folder *ext*
 * For Windows install Delphi (5, 6, 7, Turbo, 2006 or 2007) or FreePascal 2.3.1 with Lazarus 0.9.24+ or [http://sourceforge.net/projects/mseide-msegui MSEide 1.8+]. I used Turbo Delphi.
 * For Posix systems (Linux, MacOS X, BSDs, Solaris, etc.) install FreePascal 2.3.1 with Lazarus 0.9.24+ or MSEide 1.8+. I used FreePascal and MSEide.
 * Download ExtPascal package to a working directory, for example: C:\ExtPascal. 

= First Steps =
 # Compile ExtToPascal.dpr source using your ObjectPascal compiler.
 # For Delphi I recommend set these Syntax options (menu \Project\Options\Compiler):
{{{
OFF Strict var-strings
OFF Complete boolean eval
ON Extended syntax 
OFF Typed @ operator
ON Open parameters
ON Huge strings 
ON Assignable typed constants
}}}
 # For FreePascal I recommend _*`-Smdcghie50 -venwi -l`*_  as compiler options. Append this options _*`-O2pPENTIUM4 -CXpPENTIUM4 -XXsi -CfSSE`*_  to release version.
 # Run it informing the path of the ExtJS documentation, the HTML files. Use quotes if path contain whitespaces. For example:
{{{
ExtToPascal C:\Ext\docs\output 
ExtToPascal "C:\Documents and Settings\My Documents\RAD Studio\Projects\ExtPascal\ExtJS\ext-2.1\docs\output"
}}}
 # ExtToPascal will generate a Pascal Unit for each JavaScript Package. A total of 12 units in version 2.1 of ExtJS.
 # Compile ExtPascalSamples as example.

= Setting using FastCGI thru CGI gateway (any Apache version and similar procedure on IIS) =
 # Open CGIGateway.dpr
 # Modify Port constant if necessary, default 2014
 # Compile
 # Copy CGIGateway.exe to cgi-bin directory
 # Open your FastCGI application (by example ExtPascalSamples.dpr)
 # Modify Port optional parameter if necessary, default 2014. Near the bottom line of the program, which states:
{{{
Application := TFCGIApplication.Create('ExtPascal Samples 0.8.7', TSamples, 2014, 5, true);
}}}
 # Compile
 # Copy your FastCGI application to cgi-bin directory. Use `.fcgi` extension for Posix (non-Windows) platforms
 # Rename CGIGateway.exe to the same name of your FastCGI application changing the extension to .cgi or anything
 # To play the Samples, by example, you will have this files at cgi-bin:
{{{
ExtPascalSamples.exe // The real FastCGI application. The extension is `.fcgi` for Posix platforms.
ExtPascalSamples.cgi // The CGI Gateway
}}}
 # None configuration is necessary on Apache.
 # In your browser call Samples using:
{{{
http://localhost/cgi-bin/ExtPascalSamples.cgi
}}}
 # ExtPascalSamples.cgi (the gateway) will start automatically ExtPascalSamples.exe (the real FastCGI application). 

= Setting using native FastCGI, only for Apache 2.2+ =
 # Download FastCGI module at: http://www.fastcgi.com/dist/mod_fastcgi-2.4.6-AP22.dll
 # Rename to `mod_fastcgi.so` 
 # Copy to Apache's modules folder (by example c:\apache\modules)
 # In httpd.conf file at LoadModules session insert the line below:
{{{
LoadModule fastcgi_module modules/mod_fastcgi.so
}}}
 # Declare the FastCGI application as external server, appending this line in httpd.conf:
{{{
fastcgiexternalserver C:/apache/cgi-bin/ExtPascalApp.exe –host localhost:2014 –idle-timeout 3
}}}
 # C:/apache is the path where Apache is installed
 # –host parameter declare the server where is hosted the FastCGI application (by example localhost).
 # The default TCP/IP port is 2014, but another could be declared.
 # Copy your FastCGI application (by example ExtPascalSamples.exe) to cgi-bin directory
 # Start manually your FastCGI application, via console for example. It will works as a service or a daemon for the Web Server, receiving requests by the TCP port.
 # In your browser call Samples using:
{{{
http://localhost/cgi-bin/ExtPascalSamples.exe
}}}
 # See [http://www.fastcgi.com/mod_fastcgi/docs/mod_fastcgi.html#FastCgiExternalServer FastCGI docs] for more info.