// Generated by GenPkg 0.0.7 at 15:31:37 on 2009-09-12

unit ExtP_Design_Grid;

{ExtPascal grid design controls}

{$IFDEF LCL}
 {$MODE DELPHI}
{$ENDIF}

interface

uses
  Classes, {$IFDEF LCL} LResources, PropEdits, MyOvcTbPE2, {$ELSE} DesignIntf, OvcTbPE2, {$ENDIF} OvcTbCls, OvcTcmmn, OvcTable, OvcTcEdt, OvcTcBox, OvcTcCbx;

type

  TExtEvent=procedure of object;


  TCustomExtGridEditorGridPanel = class(TOvcCustomTable)
  end;

  TExtGridEditorGridPanel = class(TCustomExtGridEditorGridPanel)
  private
    FAutoExpandColumn : string;
    FClicksToEdit : Integer;
    FFrame : Boolean;
    FTitle : string;
  protected
    function GetDisabled : Boolean;
    procedure SetDisabled(ADisabled : Boolean);
    function GetHidden : Boolean;
    procedure SetHidden(AHidden : Boolean);
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property AutoExpandColumn : string read FAutoExpandColumn write FAutoExpandColumn;
    property ClicksToEdit : Integer read FClicksToEdit write FClicksToEdit default 2;
    property ColCount;
    property Columns;
    property Disabled : Boolean read GetDisabled write SetDisabled default False;
    property Frame : Boolean read FFrame write FFrame default False;
    property Height;
    property Hidden : Boolean read GetHidden write SetHidden default False;
    property Left;
    property Name;
    property Title : string read FTitle write FTitle;
    property Top;
    property Width;
  end;


  TCustomExtFormTextField_Grid = class(TOvcTCCustomString)
  end;

  TExtFormTextField_Grid = class(TCustomExtFormTextField_Grid)
  private
    FDataIndex : string;
    FHeader : string;
  protected
    function GetGrid : TOvcTableAncestor;
    procedure SetGrid(AGrid : TOvcTableAncestor);
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property DataIndex : string read FDataIndex write FDataIndex;
    property Grid : TOvcTableAncestor read GetGrid write SetGrid;
    property Header : string read FHeader write FHeader;
    property Name;
  end;


  TCustomExtFormNumberField_Grid = class(TOvcTCCustomString)
  end;

  TExtFormNumberField_Grid = class(TCustomExtFormNumberField_Grid)
  private
    FDataIndex : string;
    FHeader : string;
  protected
    function GetGrid : TOvcTableAncestor;
    procedure SetGrid(AGrid : TOvcTableAncestor);
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property DataIndex : string read FDataIndex write FDataIndex;
    property Grid : TOvcTableAncestor read GetGrid write SetGrid;
    property Header : string read FHeader write FHeader;
    property Name;
  end;


  TCustomExtFormDateField_Grid = class(TOvcTCCustomString)
  end;

  TExtFormDateField_Grid = class(TCustomExtFormDateField_Grid)
  private
    FDataIndex : string;
    FHeader : string;
  protected
    function GetGrid : TOvcTableAncestor;
    procedure SetGrid(AGrid : TOvcTableAncestor);
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property DataIndex : string read FDataIndex write FDataIndex;
    property Grid : TOvcTableAncestor read GetGrid write SetGrid;
    property Header : string read FHeader write FHeader;
    property Name;
  end;


  TCustomExtFormTimeField_Grid = class(TOvcTCCustomString)
  end;

  TExtFormTimeField_Grid = class(TCustomExtFormTimeField_Grid)
  private
    FDataIndex : string;
    FHeader : string;
  protected
    function GetGrid : TOvcTableAncestor;
    procedure SetGrid(AGrid : TOvcTableAncestor);
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property DataIndex : string read FDataIndex write FDataIndex;
    property Grid : TOvcTableAncestor read GetGrid write SetGrid;
    property Header : string read FHeader write FHeader;
    property Name;
  end;


  TCustomExtFormCheckbox_Grid = class(TOvcTCCustomCheckBox)
  end;

  TExtFormCheckbox_Grid = class(TCustomExtFormCheckbox_Grid)
  private
    FDataIndex : string;
    FHeader : string;
  protected
    function GetGrid : TOvcTableAncestor;
    procedure SetGrid(AGrid : TOvcTableAncestor);
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property DataIndex : string read FDataIndex write FDataIndex;
    property Grid : TOvcTableAncestor read GetGrid write SetGrid;
    property Header : string read FHeader write FHeader;
    property Name;
  end;


  TCustomExtFormComboBox_Grid = class(TOvcTCCustomComboBox)
  end;

  TExtFormComboBox_Grid = class(TCustomExtFormComboBox_Grid)
  private
    FDataIndex : string;
    FHeader : string;
  protected
    function GetGrid : TOvcTableAncestor;
    procedure SetGrid(AGrid : TOvcTableAncestor);
  public
    constructor Create(AOwner : TComponent); override;
    destructor Destroy; override;
  published
    property DataIndex : string read FDataIndex write FDataIndex;
    property Grid : TOvcTableAncestor read GetGrid write SetGrid;
    property Header : string read FHeader write FHeader;
    property Name;
  end;


procedure Register;


implementation

 {TExtGridEditorGridPanel}

constructor TExtGridEditorGridPanel.Create(AOwner : TComponent);
begin
  inherited Create(AOwner);
  LockedCols := 0;
  LeftCol := 0;
  ActiveCol := 0;
  ClicksToEdit := 2;
  Disabled := False;
  Frame := False;
  Hidden := False;
end;

destructor TExtGridEditorGridPanel.Destroy;
begin
  inherited Destroy;
end;

function TExtGridEditorGridPanel.GetDisabled : Boolean;
begin
  Result := not Enabled;
end;

procedure TExtGridEditorGridPanel.SetDisabled(ADisabled : Boolean);
begin
  if Enabled = ADisabled then
    Enabled := not ADisabled;
end;

function TExtGridEditorGridPanel.GetHidden : Boolean;
begin
  Result := not Visible;
end;

procedure TExtGridEditorGridPanel.SetHidden(AHidden : Boolean);
begin
  if Visible = AHidden then
    Visible := not AHidden;
end;


 {TExtFormTextField_Grid}

constructor TExtFormTextField_Grid.Create(AOwner : TComponent);
begin
  inherited Create(AOwner);
end;

destructor TExtFormTextField_Grid.Destroy;
begin
  inherited Destroy;
end;

function TExtFormTextField_Grid.GetGrid : TOvcTableAncestor;
begin
  Result := Table;
end;

procedure TExtFormTextField_Grid.SetGrid(AGrid : TOvcTableAncestor);
begin
  if Table <> AGrid then
    Table := AGrid;
end;


 {TExtFormNumberField_Grid}

constructor TExtFormNumberField_Grid.Create(AOwner : TComponent);
begin
  inherited Create(AOwner);
end;

destructor TExtFormNumberField_Grid.Destroy;
begin
  inherited Destroy;
end;

function TExtFormNumberField_Grid.GetGrid : TOvcTableAncestor;
begin
  Result := Table;
end;

procedure TExtFormNumberField_Grid.SetGrid(AGrid : TOvcTableAncestor);
begin
  if Table <> AGrid then
    Table := AGrid;
end;


 {TExtFormDateField_Grid}

constructor TExtFormDateField_Grid.Create(AOwner : TComponent);
begin
  inherited Create(AOwner);
end;

destructor TExtFormDateField_Grid.Destroy;
begin
  inherited Destroy;
end;

function TExtFormDateField_Grid.GetGrid : TOvcTableAncestor;
begin
  Result := Table;
end;

procedure TExtFormDateField_Grid.SetGrid(AGrid : TOvcTableAncestor);
begin
  if Table <> AGrid then
    Table := AGrid;
end;


 {TExtFormTimeField_Grid}

constructor TExtFormTimeField_Grid.Create(AOwner : TComponent);
begin
  inherited Create(AOwner);
end;

destructor TExtFormTimeField_Grid.Destroy;
begin
  inherited Destroy;
end;

function TExtFormTimeField_Grid.GetGrid : TOvcTableAncestor;
begin
  Result := Table;
end;

procedure TExtFormTimeField_Grid.SetGrid(AGrid : TOvcTableAncestor);
begin
  if Table <> AGrid then
    Table := AGrid;
end;


 {TExtFormCheckbox_Grid}

constructor TExtFormCheckbox_Grid.Create(AOwner : TComponent);
begin
  inherited Create(AOwner);
end;

destructor TExtFormCheckbox_Grid.Destroy;
begin
  inherited Destroy;
end;

function TExtFormCheckbox_Grid.GetGrid : TOvcTableAncestor;
begin
  Result := Table;
end;

procedure TExtFormCheckbox_Grid.SetGrid(AGrid : TOvcTableAncestor);
begin
  if Table <> AGrid then
    Table := AGrid;
end;


 {TExtFormComboBox_Grid}

constructor TExtFormComboBox_Grid.Create(AOwner : TComponent);
begin
  inherited Create(AOwner);
end;

destructor TExtFormComboBox_Grid.Destroy;
begin
  inherited Destroy;
end;

function TExtFormComboBox_Grid.GetGrid : TOvcTableAncestor;
begin
  Result := Table;
end;

procedure TExtFormComboBox_Grid.SetGrid(AGrid : TOvcTableAncestor);
begin
  if Table <> AGrid then
    Table := AGrid;
end;


procedure Register;
begin
  RegisterPropertyEditor(TypeInfo(TOvcTableColumns), TExtGridEditorGridPanel, '', TOvcTableColumnProperty);
  RegisterComponents('ExtPascal',
                     [TExtGridEditorGridPanel,
                      TExtFormTextField_Grid,
                      TExtFormNumberField_Grid,
                      TExtFormDateField_Grid,
                      TExtFormTimeField_Grid,
                      TExtFormCheckbox_Grid,
                      TExtFormComboBox_Grid]);
end;


{$IFDEF LCL}
initialization
{$I extp_grid_glyphs.lrs}
{$ENDIF}

end.
