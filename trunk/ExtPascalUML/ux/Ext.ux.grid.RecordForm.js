Ext.ns('Ext.ux.grid');Ext.ux.grid.RecordForm=function(a){Ext.apply(this,a);Ext.ux.grid.RecordForm.superclass.constructor.call(this)};Ext.extend(Ext.ux.grid.RecordForm,Ext.util.Observable,{autoHide:true,cancelIconCls:'icon-cancel',cancelText:'Cancel',columnCount:1,defaultFormConfig:{border:false,frame:true,autoHeight:true,labelWidth:100},defaultWindowConfig:{border:false,width:480,autoHeight:true,layout:'fit',closeAction:'hide',modal:true,plugins:[new Ext.ux.IconMenu({defaultItems:[]})]},dirtyRowCls:'ux-grid3-dirty-row',focusDefer:200,mapping:{'auto':'textfield','boolean':'checkbox','date':'datefield','float':'numberfield','int':'numberfield','string':'textfield'},newRowCls:'ux-grid3-new-row',okIconCls:'icon-ok',okText:'OK',showButtons:true,init:function(a){a.afterRender=a.afterRender.createSequence(function(){if('function'===typeof a.view.getRowClass){a.view.getRowClass=a.view.getRowClass.createSequence(this.getRowClass,this)}else{a.view.getRowClass=this.getRowClass.createDelegate(this)}if(this.autoShow){this.show({data:{}})}},this);this.grid=a;a.reconfigure=a.reconfigure.createSequence(this.reconfigure,this);this.reconfigure()},afterUpdateRecord:Ext.emptyFn,createFormConfig:function(){if(this.form){return}var b=this.grid.getColumnModel();var d=this.grid.store.recordType.prototype.fields;var e=this.grid.store;this.form=Ext.apply({xtype:'form',items:[{layout:'column',anchor:'100%',border:false,monitorValid:true,autoHeight:true,defaults:{columnWidth:1/this.columnCount,autoHeight:true,border:false,layout:'form',hideLabel:true},items:(function(){var a=[];for(var i=0;i<this.columnCount;i++){a.push({defaults:{anchor:'-25'},items:[]})}return a}).createDelegate(this)()}],buttons:(function(){if(this.showButtons){return[{text:this.okText,iconCls:this.okIconCls,scope:this,handler:this.onOK,formBind:true},{text:this.cancelText,iconCls:this.cancelIconCls,scope:this,handler:this.onCancel}]}else{return[]}}).createDelegate(this)(),keys:[{key:[10,13],scope:this,stopEvent:true,fn:this.onOK}]},this.formConfig,this.defaultFormConfig);var g=0;var h=1;d.each(function(f,i){if(this.ignoreFields&&this.ignoreFields[f.name]){return}var c=this.findConfig(b,f.name);var o={};if(c&&c.editor&&c.editor.field){Ext.apply(o,{xtype:c.editor.field.getXType(),fieldLabel:c.header},c.editor.field.initialConfig)}else{Ext.apply(o,{fieldLabel:(c&&c.header?c.header:f.name),xtype:this.mapping[f.type]||'textfield'});if('date'===f.type&&f.dateFormat){o.format=f.dateFormat}}if(this.readonlyFields&&true===this.readonlyFields[f.name]){o.readOnly=true}if(this.disabledFields&&true===this.disabledFields[f.name]){o.disabled=true}o.name=f.name;o.tabIndex=h++;if('datefield'===o.xtype||'timefield'===o.xtype||'datetime'===o.xtype){o.anchor=''}if('textarea'===o.xtype){o.grow=false;o.autoHeight=true}this.form.items[0].items[g++].items.push(o);g=g===this.columnCount?0:g},this)},findConfig:function(a,b){var d=null;Ext.each(a.config,function(c,i){if(d){return}if(b===c.dataIndex){d=c}});return d},getRowClass:function(a){if(a.get('newRecord')){return this.newRowCls}if(a.dirty){return this.dirtyRowCls}return''},onDestroy:function(){if(this.window){this.window.destroy();this.window=null;this.form=null}else if(this.form){if('function'===typeof this.form.destroy){this.form.destroy()}this.form=null}},onOK:function(){this.updateRecord();if(this.autoHide){this.window.hide(null)}},onCancel:function(){if(this.record.get('newRecord')&&!this.record.dirty){this.record.store.remove(this.record)}if(this.autoHide){this.window.hide(null)}},reconfigure:function(){this.onDestroy();this.createFormConfig()},getPanel:function(){if(this.window){return this.window}if(this.formCt){var b=Ext.getCmp(this.formCt);if(b){b.add(this.form);b.doLayout()}else{b=Ext.fly(this.formCt);if(b){b=new Ext.Panel({renderTo:b,items:this.form})}}}else{var c=Ext.apply({},this.defaultWindowConfig);c=Ext.apply(c,this.windowConfig);Ext.applyIf(c,{title:this.title||this.grid.title,iconCls:this.iconCls||this.grid.iconCls,items:this.form,listeners:{show:{scope:this,delay:this.focusDefer,fn:function(){this.form.startMonitoring();var a=this.form.getForm()a.items.itemAt(0).focus();a.isValid()}},hide:{scope:this,fn:function(){this.form.stopMonitoring()}}}});var d=new Ext.Window(c);this.form=d.items.itemAt(0);return d}b.on({show:{scope:this,delay:this.focusDefer,fn:function(){this.form.startMonitoring();var a=this.form.getForm()a.items.itemAt(0).focus();a.isValid()}},hide:{scope:this,fn:function(){this.form.stopMonitoring()}}});this.form=b.items.itemAt(0);return b},show:function(a,b){if(!this.window){this.window=this.getPanel()}this.window.show(b);var c=this.form.getForm();c.loadRecord(a);this.record=a},updateRecord:function(){this.form.getForm().items.each(function(a,i){this.record.set(a.name,a.getValue())},this);this.afterUpdateRecord(this.record)}});Ext.reg('gridrecordform',Ext.ux.grid.RecordForm);